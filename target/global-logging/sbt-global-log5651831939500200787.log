[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\skarnawadi\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\skarnawadi\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 80.3052ms
[debug]       Load.loadUnit: defsScala took 0.2646ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.2952 ms
[debug]           Load.resolveProject(global-plugins) took 33.9586ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\skarnawadi\.sbt\1.0\plugins, plugins: List(<none>))) took 74.6208ms
[debug] [Loading] Done in C:\Users\skarnawadi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 94.6771ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.206ms
[debug]     Load.loadUnit(file:/C:/Users/skarnawadi/.sbt/1.0/plugins/, ...) took 181.7494ms
[debug]   Load.apply: load took 309.9337ms
[debug]   Load.apply: resolveProjects took 4.4364ms
[debug]   Load.apply: finalTransforms took 49.3668ms
[debug]   Load.apply: config.delegates took 8.2688ms
[debug]   Load.apply: Def.make(settings)... took 835.8029ms
[debug]   Load.apply: structureIndex took 88.9654ms
[debug]   Load.apply: mkStreams took 1.947ms
[info] loading global plugins from C:\Users\skarnawadi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2930.7532ms
[debug]           Load.loadUnit: plugins took 29.9791ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project
[debug]             Load.loadUnit: mkEval took 6.4053ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8646 ms
[info] loading settings for project receptionistpoc-build from idea1.sbt ...
[debug]               Load.resolveProject(receptionistpoc-build) took 10.0384ms
[debug]             Load.loadTransitive: finalizeProject(Project(id receptionistpoc-build, base: C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, plugins: List(<none>))) took 12.3788ms
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, returning: (receptionistpoc-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 121.5049ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.7036ms
[debug]         Load.loadUnit(file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/project/, ...) took 157.958ms
[debug]       Load.apply: load took 159.4168ms
[debug]       Load.apply: resolveProjects took 0.0879ms
[debug]       Load.apply: finalTransforms took 12.5747ms
[debug]       Load.apply: config.delegates took 0.3993ms
[debug]       Load.apply: Def.make(settings)... took 132.5601ms
[debug]       Load.apply: structureIndex took 29.8738ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1358.2525ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC
[debug]       Load.loadUnit: mkEval took 0.2884ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8021 ms
[info] loading settings for project receptionistpoc from build.sbt ...
[debug]         Load.resolveProject(receptionistpoc) took 34.4308ms
[debug]       Load.loadTransitive: finalizeProject(Project(id receptionistpoc, base: C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, plugins: List(<none>))) took 37.2356ms
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, returning: (receptionistpoc)
[debug]     Load.loadUnit: loadedProjectsRaw took 3491.5964ms
[debug]     Load.loadUnit: cleanEvalClasses took 48.653ms
[debug]   Load.loadUnit(file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/, ...) took 4899.1624ms
[debug] Load.apply: load took 4901.7633ms
[debug] Load.apply: resolveProjects took 0.1493ms
[debug] Load.apply: finalTransforms took 21.1762ms
[debug] Load.apply: config.delegates took 0.3945ms
[debug] Load.apply: Def.make(settings)... took 90.613ms
[debug] Load.apply: structureIndex took 29.2185ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to ReceptionistPOC (in build file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 65317 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 65317, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ReceptionistPOC (in build file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/)
[debug] > Exec(idea-shell, None, None)
