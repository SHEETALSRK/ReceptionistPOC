[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\skarnawadi\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\skarnawadi\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 322.1619ms
[debug]       Load.loadUnit: defsScala took 2.8616ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 58.0826 ms
[debug]           Load.resolveProject(global-plugins) took 98.4802ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\skarnawadi\.sbt\1.0\plugins, plugins: List(<none>))) took 275.8591ms
[debug] [Loading] Done in C:\Users\skarnawadi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 330.9918ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.525ms
[debug]     Load.loadUnit(file:/C:/Users/skarnawadi/.sbt/1.0/plugins/, ...) took 682.5785ms
[debug]   Load.apply: load took 1037.6856ms
[debug]   Load.apply: resolveProjects took 13.936ms
[debug]   Load.apply: finalTransforms took 138.6222ms
[debug]   Load.apply: config.delegates took 20.798ms
[debug]   Load.apply: Def.make(settings)... took 2323.9839ms
[debug]   Load.apply: structureIndex took 211.314ms
[debug]   Load.apply: mkStreams took 2.9829ms
[info] loading global plugins from C:\Users\skarnawadi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11681.8839ms
[debug]           Load.loadUnit: plugins took 66.1213ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project
[debug]             Load.loadUnit: mkEval took 12.8972ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4849 ms
[info] loading settings for project receptionistpoc-build from idea1.sbt ...
[debug]               Load.resolveProject(receptionistpoc-build) took 15.6518ms
[debug]             Load.loadTransitive: finalizeProject(Project(id receptionistpoc-build, base: C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, plugins: List(<none>))) took 18.8372ms
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project, returning: (receptionistpoc-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 241.467ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.921ms
[debug]         Load.loadUnit(file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/project/, ...) took 321.3009ms
[debug]       Load.apply: load took 324.4954ms
[debug]       Load.apply: resolveProjects took 0.2109ms
[debug]       Load.apply: finalTransforms took 18.6329ms
[debug]       Load.apply: config.delegates took 0.539ms
[debug]       Load.apply: Def.make(settings)... took 110.592ms
[debug]       Load.apply: structureIndex took 42.0476ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1577.3838ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC
[debug]       Load.loadUnit: mkEval took 0.7131ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5125 ms
[info] loading settings for project receptionistpoc from build.sbt ...
[debug]         Load.resolveProject(receptionistpoc) took 72.8909ms
[debug]       Load.loadTransitive: finalizeProject(Project(id receptionistpoc, base: C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, plugins: List(<none>))) took 82.0981ms
[debug] [Loading] Done in C:\Users\skarnawadi\Documents\playground\RD\ReceptionistPOC, returning: (receptionistpoc)
[debug]     Load.loadUnit: loadedProjectsRaw took 8924.4454ms
[debug]     Load.loadUnit: cleanEvalClasses took 196.2907ms
[debug]   Load.loadUnit(file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/, ...) took 10700.9865ms
[debug] Load.apply: load took 10706.6582ms
[debug] Load.apply: resolveProjects took 0.1956ms
[debug] Load.apply: finalTransforms took 51.7836ms
[debug] Load.apply: config.delegates took 0.6234ms
[debug] Load.apply: Def.make(settings)... took 189.322ms
[debug] Load.apply: structureIndex took 33.315ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to ReceptionistPOC (in build file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49915 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49915, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ReceptionistPOC (in build file:/C:/Users/skarnawadi/Documents/playground/RD/ReceptionistPOC/)
[debug] > Exec(idea-shell, None, None)
